name: Build and Test

on:
  push:
    branches:
      - gtest
  pull_request:
    branches:
      - gtest

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    # Cache system dependencies
    - name: Cache APT packages
      uses: actions/cache@v3
      with:
        path: /var/lib/apt/lists
        key: apt-cache-${{ runner.os }}
        restore-keys: apt-cache-

    - name: Install Dependencies (Only If Cache Misses)
      run: |
        if [ ! -f "/usr/bin/cmake" ]; then
          sudo apt-get update
          sudo apt-get install -y cmake g++ make ccache
        else
          echo "Dependencies already installed, skipping..."
        fi

    # Cache GoogleTest
    - name: Cache GoogleTest Build
      uses: actions/cache@v3
      with:
        path: build/_deps/googletest-src
        key: gtest-${{ runner.os }}-${{ hashFiles('CMakeLists.txt') }}
        restore-keys: |
          gtest-${{ runner.os }}-

    - name: Configure Project with CMake
      run: cmake -S . -B build

    - name: Build Project
      run: cmake --build build

    - name: Run Tests with CTest (Capture Output)
      id: ctest_run
      run: |
        cd build
        ctest --output-on-failure | tee test_output.log
        test ${PIPESTATUS[0]} -eq 0  # Fail the workflow if tests fail

    - name: Upload Test Log
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-log
        path: build/test_output.log
